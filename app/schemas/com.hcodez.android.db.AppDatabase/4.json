{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "b818fbe035fc7c7f2da849d2e979c3cd",
    "entities": [
      {
        "tableName": "code",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `identifier` TEXT, `owner` TEXT, `passcode` TEXT, `name` TEXT, `url` TEXT, `create_time` INTEGER, `update_time` INTEGER, `code_type` TEXT, `content_id` INTEGER, PRIMARY KEY(`id`), FOREIGN KEY(`content_id`) REFERENCES `content`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner",
            "columnName": "owner",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "passcode",
            "columnName": "passcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createTime",
            "columnName": "create_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updateTime",
            "columnName": "update_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "codeType",
            "columnName": "code_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentId",
            "columnName": "content_id",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_code_content_id",
            "unique": false,
            "columnNames": [
              "content_id"
            ],
            "createSql": "CREATE  INDEX `index_code_content_id` ON `${TABLE_NAME}` (`content_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "content",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "content_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "code",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_codeFts_BEFORE_UPDATE BEFORE UPDATE ON `code` BEGIN DELETE FROM `codeFts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_codeFts_BEFORE_DELETE BEFORE DELETE ON `code` BEGIN DELETE FROM `codeFts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_codeFts_AFTER_UPDATE AFTER UPDATE ON `code` BEGIN INSERT INTO `codeFts`(`docid`, `identifier`, `owner`, `name`) VALUES (NEW.`rowid`, NEW.`identifier`, NEW.`owner`, NEW.`name`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_codeFts_AFTER_INSERT AFTER INSERT ON `code` BEGIN INSERT INTO `codeFts`(`docid`, `identifier`, `owner`, `name`) VALUES (NEW.`rowid`, NEW.`identifier`, NEW.`owner`, NEW.`name`); END"
        ],
        "tableName": "codeFts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`identifier` TEXT, `owner` TEXT, `name` TEXT, content=`code`)",
        "fields": [
          {
            "fieldPath": "rowId",
            "columnName": "rowid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner",
            "columnName": "owner",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "rowid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "content",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `description` TEXT, `resource_uri` TEXT, `content_type` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "resourceURI",
            "columnName": "resource_uri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentType",
            "columnName": "content_type",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "content",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_contentFts_BEFORE_UPDATE BEFORE UPDATE ON `content` BEGIN DELETE FROM `contentFts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_contentFts_BEFORE_DELETE BEFORE DELETE ON `content` BEGIN DELETE FROM `contentFts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_contentFts_AFTER_UPDATE AFTER UPDATE ON `content` BEGIN INSERT INTO `contentFts`(`docid`, `description`) VALUES (NEW.`rowid`, NEW.`description`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_contentFts_AFTER_INSERT AFTER INSERT ON `content` BEGIN INSERT INTO `contentFts`(`docid`, `description`) VALUES (NEW.`rowid`, NEW.`description`); END"
        ],
        "tableName": "contentFts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`description` TEXT, content=`content`)",
        "fields": [
          {
            "fieldPath": "rowId",
            "columnName": "rowid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "rowid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'b818fbe035fc7c7f2da849d2e979c3cd')"
    ]
  }
}